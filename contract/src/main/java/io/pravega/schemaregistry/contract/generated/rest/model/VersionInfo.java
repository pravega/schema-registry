/*
 * Pravega Schema Registry APIs
 * REST APIs for Pravega Schema Registry.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.pravega.schemaregistry.contract.generated.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * Version information object.
 */
@ApiModel(description = "Version information object.")

public class VersionInfo   {
  @JsonProperty("type")
  private String type = null;

  @JsonProperty("version")
  private Integer version = null;

  @JsonProperty("ordinal")
  private Integer ordinal = null;

  public VersionInfo type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Type of schema for this version. This is same value used in SchemaInfo#Type for the schema this version identifies.
   * @return type
   **/
  @JsonProperty("type")
  @ApiModelProperty(required = true, value = "Type of schema for this version. This is same value used in SchemaInfo#Type for the schema this version identifies.")
  @NotNull
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public VersionInfo version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Version number that uniquely identifies the schema version among all schemas in the group that share the same Type.
   * @return version
   **/
  @JsonProperty("version")
  @ApiModelProperty(required = true, value = "Version number that uniquely identifies the schema version among all schemas in the group that share the same Type.")
  @NotNull
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public VersionInfo ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

  /**
   * Version ordinal that uniquely identifies the position of the corresponding schema across all schemas in the group.
   * @return ordinal
   **/
  @JsonProperty("ordinal")
  @ApiModelProperty(required = true, value = "Version ordinal that uniquely identifies the position of the corresponding schema across all schemas in the group.")
  @NotNull
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionInfo versionInfo = (VersionInfo) o;
    return Objects.equals(this.type, versionInfo.type) &&
        Objects.equals(this.version, versionInfo.version) &&
        Objects.equals(this.ordinal, versionInfo.ordinal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, version, ordinal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionInfo {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

