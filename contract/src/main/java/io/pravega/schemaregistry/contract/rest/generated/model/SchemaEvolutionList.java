/*
 * Pravega Schema Registry APIs
 * REST APIs for Pravega Schema Registry.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.pravega.schemaregistry.contract.rest.generated.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.pravega.schemaregistry.contract.rest.generated.model.SchemaEvolution;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * SchemaEvolutionList
 */

public class SchemaEvolutionList   {
  @JsonProperty("scopes")
  private List<SchemaEvolution> scopes = null;

  public SchemaEvolutionList scopes(List<SchemaEvolution> scopes) {
    this.scopes = scopes;
    return this;
  }

  public SchemaEvolutionList addScopesItem(SchemaEvolution scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<SchemaEvolution>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

  /**
   * Get scopes
   * @return scopes
   **/
  @JsonProperty("scopes")
  @ApiModelProperty(value = "")
  public List<SchemaEvolution> getScopes() {
    return scopes;
  }

  public void setScopes(List<SchemaEvolution> scopes) {
    this.scopes = scopes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemaEvolutionList schemaEvolutionList = (SchemaEvolutionList) o;
    return Objects.equals(this.scopes, schemaEvolutionList.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scopes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemaEvolutionList {\n");
    
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

